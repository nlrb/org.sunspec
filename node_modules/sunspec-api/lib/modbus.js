class ModBus {

	constructor(tcp) {
		this.tcp = tcp || true;
	}

	// calcCRC
	calcCRC(data) {
		var crc = 0xffff;

		for (var pos = 0; pos < data.length; pos++) {
			crc ^= data[pos];
			for (var i = 8; i != 0; i--) {
				if (crc & 0x1 != 0) {
					crc >>= 1;
					crc ^= 0xA001;
				} else {
					crc >>= 1;
				}
			}
		}
		return crc
	}

	// modbus.makeRequest
	makeRequest(modBusId, func, addr, cnt) {
		let addrLo = (addr - 1) & 0xff;
		let addrHi = (addr - 1) >> 8;

		let req;
		if (this.tcp) {
			req = [0, 0, 0, 0, 0, 0x06, modBusId, func, addrHi, addrLo, 0x0, cnt]
		} else {
			req = [modBusId, func, addrHi, addrLo, 0x00, cnt];

			let crc = ModBus.calcCRC(req);
			let crcLo = crc & 0xff;
			let crcHi = crc >> 8;
			req.concat([crcLo, crcHi]);
		}

		return req;
	}
}

module.exports = ModBus;
